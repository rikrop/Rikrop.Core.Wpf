<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:Rikrop.Core.Wpf.Controls"
                    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:TabControl="clr-namespace:Rikrop.Core.Wpf.Controls.TabControl">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Rikrop.Core.Wpf;component/Themes/Brushes.xaml" />
        <ResourceDictionary Source="/Rikrop.Core.Wpf;component/Themes/ButtonStyles.xaml" />
        <ResourceDictionary Source="/Rikrop.Core.Wpf;component/Converters/Converters.xaml"/>
        <ResourceDictionary Source="/Rikrop.Core.Wpf;component/Themes/CommonResources.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Geometry x:Key="TabMenuButton">M0,1 H0,5 M7,8 L0,8 0,2 10,2 L10,5 M10,8 L10,10 8,10Z</Geometry>

    <SolidColorBrush x:Key="MenuBackcolor" Color="{StaticResource DefaultBackgroundColor}"/>

    <Style x:Key="TabMenuButtonStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border >
                        <Grid>
                            <Border x:Name="BackgroundBorder"
                                CornerRadius="3" Height="24" Width="24"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Opacity="0.7">

                                <ContentPresenter x:Name="ImagePresenter" ContentSource="Header"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center">

                                    <ContentPresenter.Content>
                                        <Path Margin="2" Height="10" Width="10"
                                            Data="{StaticResource TabMenuButton}"
                                            Stroke="Black"
                                            Fill="Black"
                                            Stretch="Fill"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"/>
                                    </ContentPresenter.Content>

                                </ContentPresenter>
                            </Border>


                            <Popup Name="Popup"
                                Placement="Bottom"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Fade"
                                IsOpen="{TemplateBinding IsSubmenuOpen}">

                                <mwt:SystemDropShadowChrome Color="#71000000" 
                                                        CornerRadius="1"
                                                        Margin="0,0,8,8"
                                                        SnapsToDevicePixels="True">
                                    <Border Name="SubmenuBorder"
                                    Margin="1"
                                    SnapsToDevicePixels="True"
                                    BorderBrush="{StaticResource ButtonBorderBrush}"
                                    Background="{StaticResource MenuBackcolor}" 
                                    CornerRadius="1" 
                                    BorderThickness="1">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Border>
                                </mwt:SystemDropShadowChrome>
                            </Popup>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="ImagePresenter" Property="Opacity" 
                                Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource TabItemHotBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Header" Value="{Binding Path=Header}" />
        <Setter Property="IsEnabled" Value="{Binding Path=IsEnabled}" />
        <Setter Property="IsCheckable" Value="{Binding Path=IsEnabled}" />
        <Setter Property="IsChecked" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultFontBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DefaultDisabledFontBrush}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="UpButtonStyle"
         TargetType="{x:Type Controls:RrcButton}"
         BasedOn="{StaticResource CommonButtonStyle}">
        <Setter Property="ImageTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox>
                        <Canvas Width="20"
                    Height="20">
                            <Path Data="M 0 15  10 5  20 15"
                    Stroke="#ff414041"
                    Fill="Transparent"
                    StrokeThickness="3" />
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DownButtonStyle"
         TargetType="{x:Type Controls:RrcButton}"
         BasedOn="{StaticResource CommonButtonStyle}">
        <Setter Property="ImageTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox>
                        <Canvas Width="20"
                    Height="20">
                            <Path Data="M 0 5  10 15  20 5"
                    Stroke="#ff414041"
                    Fill="Transparent"
                    StrokeThickness="3" />
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalDashedSeparatorStyle"
           TargetType="{x:Type Line}">
        <Setter Property="StrokeDashArray"
                Value="15 15" />
        <Setter Property="StrokeDashOffset"
                Value="15" />
        <Setter Property="StrokeThickness"
                Value="1" />
        <Setter Property="Stroke"
                Value="{StaticResource DefaultBorderBrush}" />
        <Setter Property="X1"
                Value="0" />
        <Setter Property="X2"
                Value="1" />
        <Setter Property="Y1"
                Value="0" />
        <Setter Property="Y2"
                Value="0" />
        <Setter Property="Stretch"
                Value="Fill" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <Style x:Key="VerticalDashedSeparatorStyle"
           TargetType="{x:Type Line}">
        <Setter Property="StrokeDashArray"
                Value="10 10" />
        <Setter Property="StrokeDashOffset"
                Value="10" />
        <Setter Property="StrokeThickness"
                Value="1" />
        <Setter Property="Stroke"
                Value="{StaticResource DefaultBorderBrush}" />
        <Setter Property="X1"
                Value="0" />
        <Setter Property="X2"
                Value="0" />
        <Setter Property="Y1"
                Value="0" />
        <Setter Property="Y2"
                Value="1" />
        <Setter Property="Stretch"
                Value="Fill" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
    </Style>

    <Geometry x:Key="ArrowLeft">M0,5 L10,10 10,0Z</Geometry>
    <Style x:Key="ArrowLeftButtonStyle"
         TargetType="{x:Type Controls:RrcButton}"
         BasedOn="{StaticResource CommonButtonStyle}">
        <Setter Property="ImageTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox x:Name="ImageBox"
                   Width="10"
                   Height="10">
                        <Path Data="{StaticResource ArrowLeft}"
                  Stroke="Black"
                  Fill="Black"
                  Stretch="Fill"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center" />

                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="ArrowRight">M0,0 L10,5 L0,10Z</Geometry>
    <DataTemplate x:Key="ArrowRightImageTemplate">
        <Viewbox x:Name="ImageBox"
                 Width="10"
                 Height="10">
            <Path Data="{StaticResource ArrowRight}"
                  Stroke="Black"
                  Fill="Black"
                  Stretch="Fill"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center" />

        </Viewbox>
    </DataTemplate>

    
    <Style x:Key="ArrowRightButtonStyle"
         TargetType="{x:Type Controls:RrcButton}"
         BasedOn="{StaticResource CommonButtonStyle}">
        <Setter Property="ImageTemplate"
            Value="{StaticResource ArrowRightImageTemplate}">
        </Setter>
    </Style>

    <Style x:Key="AdvancedScrolViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="HeaderGrid" 
                              SnapsToDevicePixels="True" 
                              Grid.Row="0" Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Controls:RrcButton 
                                x:Name="Left"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" 
                                Grid.Column="0"
                                Grid.Row="0"
                                Margin="5,0,5,0"
                                Height="24"/>
                        <ScrollContentPresenter 
                                x:Name="PART_ScrollContentPresenter"
                                VirtualizingStackPanel.IsVirtualizing="False"                                                    
                                SnapsToDevicePixels="True" 
                                CanContentScroll="true"
                                Grid.Column="1" 
                                Grid.Row="0"
                                Content="{TemplateBinding ScrollViewer.Content}"/>

                        <Controls:RrcButton 
                            x:Name="Right"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Grid.Column="2" 
                            Grid.Row="0" 
                            Margin="5,0,5,0"
                            Height="24">

                        </Controls:RrcButton>

                        <Menu x:Name="Menu" 
                                        Background="Transparent" 
                                        Margin="0,0,3,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Grid.Column="3" 
                                        Grid.Row="0">
                            <MenuItem
                                    Style="{StaticResource TabMenuButtonStyle}"
                                    ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=Items}"
                                    ItemContainerStyle="{StaticResource TabMenuItem}">
                            </MenuItem>
                        </Menu>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalAlignment" Value="Stretch">
                            <Setter Property="Margin" TargetName="PART_ScrollContentPresenter" Value="-2,0,-2,0"/>
                            <Setter Property="Grid.Row" TargetName="Left" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="PART_ScrollContentPresenter" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="Right" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="Menu" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="Left" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="PART_ScrollContentPresenter" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="Right" Value="2"/>
                            <Setter Property="Grid.Column" TargetName="Menu" Value="3"/>

                            <Setter Property="IsEnabled" TargetName="Left" Value="{Binding ElementName=svTP, Path=HorizontalOffset, Converter={StaticResource scrollbarOnFarLeftConverter}}"/>
                            <Setter Property="IsEnabled" TargetName="Right">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource scrollbarOnFarRightConverter}">
                                        <Binding ElementName="svTP" Path="HorizontalOffset"/>
                                        <Binding ElementName="svTP" Path="ViewportWidth"/>
                                        <Binding ElementName="svTP" Path="ExtentWidth"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Command" TargetName="Left" Value="ScrollBar.LineLeftCommand"/>
                            <Setter Property="Command" TargetName="Right" Value="ScrollBar.LineRightCommand"/>

                            <Setter Property="Style" TargetName="Left" Value="{StaticResource ArrowLeftButtonStyle}"/>
                            <Setter Property="Style" TargetName="Right" Value="{StaticResource ArrowRightButtonStyle}"/>

                            <Setter Property="Visibility" TargetName="Right">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource scrollbarOnButtonsVisibilityConverter}">
                                        <Binding ElementName="svTP" Path="ViewportWidth"/>
                                        <Binding ElementName="svTP" Path="ExtentWidth"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Visibility" TargetName="Left">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource scrollbarOnButtonsVisibilityConverter}">
                                        <Binding ElementName="svTP" Path="ViewportWidth"/>
                                        <Binding ElementName="svTP" Path="ExtentWidth"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Visibility" TargetName="Menu">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource scrollbarOnButtonsVisibilityConverter}">
                                        <Binding ElementName="svTP" Path="ViewportWidth"/>
                                        <Binding ElementName="svTP" Path="ExtentWidth"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="HorizontalAlignment" Value="Left">
                            <Setter Property="Margin" TargetName="PART_ScrollContentPresenter" Value="0,-2,0,-2"/>
                            <Setter Property="Grid.Row" TargetName="Left" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="PART_ScrollContentPresenter" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="Right" Value="2"/>
                            <Setter Property="Grid.Row" TargetName="Menu" Value="2"/>

                            <Setter Property="Grid.Column" TargetName="Left" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="PART_ScrollContentPresenter" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="Right" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="Menu" Value="1"/>

                            <Setter Property="IsEnabled" TargetName="Left" 
                                    Value="{Binding ElementName=svTP, Path=VerticalOffset, Converter={StaticResource scrollbarOnFarLeftConverter}}"/>
                            <Setter Property="IsEnabled" TargetName="Right">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource scrollbarOnFarRightConverter}">
                                        <Binding ElementName="svTP" Path="VerticalOffset"/>
                                        <Binding ElementName="svTP" Path="ViewportHeight"/>
                                        <Binding ElementName="svTP" Path="ExtentHeight"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>

                            <Setter Property="Visibility" TargetName="Right">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource scrollbarOnButtonsVisibilityConverter}">
                                        <Binding ElementName="svTP" Path="ViewportHeight"/>
                                        <Binding ElementName="svTP" Path="ExtentHeight"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Visibility" TargetName="Left">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource scrollbarOnButtonsVisibilityConverter}">
                                        <Binding ElementName="svTP" Path="ViewportHeight"/>
                                        <Binding ElementName="svTP" Path="ExtentHeight"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Visibility" TargetName="Menu">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource scrollbarOnButtonsVisibilityConverter}">
                                        <Binding ElementName="svTP" Path="ViewportHeight"/>
                                        <Binding ElementName="svTP" Path="ExtentHeight"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>

                            <Setter Property="Command" TargetName="Left" Value="ScrollBar.LineUpCommand"/>
                            <Setter Property="Command" TargetName="Right" Value="ScrollBar.LineDownCommand"/>
                            <Setter Property="Style" TargetName="Right" Value="{StaticResource UpButtonStyle}"/>
                            <Setter Property="Style" TargetName="Left" Value="{StaticResource DownButtonStyle}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type TabControl:RrcTabControl}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Margin"
                Value="4" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{StaticResource DefaultBorderBrush}"/>
        <Setter Property="Background"
                Value="#F9F9F9" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl:RrcTabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>

                        <Border Name="TabPanelBorderBackGround"
                                Grid.Column="{Binding (Grid.Column),ElementName=TabPanelBorder}"
                                Grid.Row="{Binding (Grid.Row),ElementName=TabPanelBorder}"
                                Background="{StaticResource HeaderBackgroundBrush}">
                        </Border>

                        <Border BorderBrush="{StaticResource DefaultBorderBrush}"
                                Grid.ColumnSpan="2"
                                Grid.RowSpan="2"
                                BorderThickness="0"
                                CornerRadius="3,3,3,3">
                        </Border>

                        <Border Name="TabPanelBorder">
                            <Grid x:Name="TabPanelContainer"
                              
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch">
                                <Line x:Name="TopLine"
                                  Style="{StaticResource HorizontalDashedSeparatorStyle}"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Top"
                                  Visibility="Collapsed"
                                  Margin="1" />
                                <Line x:Name="BottomLine"
                                  Style="{StaticResource HorizontalDashedSeparatorStyle}"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Bottom"
                                  Visibility="Collapsed"
                                  Margin="1" />
                                <Line x:Name="LeftLine"
                                  Style="{StaticResource VerticalDashedSeparatorStyle}"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Stretch"
                                  Visibility="Collapsed"
                                  Margin="1" />
                                <Line x:Name="RightLine"
                                  Style="{StaticResource VerticalDashedSeparatorStyle}"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Stretch"
                                  Visibility="Collapsed"
                                  Margin="1" />

                                <ScrollViewer x:Name="svTP"
                                          SnapsToDevicePixels="True"
                                          CanContentScroll="True"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Disabled"
                                          Style="{StaticResource AdvancedScrolViewerStyle}"
                                          HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Center">

                                    <StackPanel Name="HeaderPanel"
                                            IsItemsHost="true"
                                            KeyboardNavigation.TabIndex="1" />
                                </ScrollViewer>

                                <ContentPresenter Content="{TemplateBinding HeaderPanel}"
                                                  HorizontalAlignment="{Binding Content.HorizontalAlignment, RelativeSource={RelativeSource Mode=Self}}"
                                                  VerticalAlignment="{Binding Content.VerticalAlignment, RelativeSource={RelativeSource Mode=Self}}"
                                                  MaxHeight="{Binding Path=ActualHeight, ElementName=svTP}"/>
                            </Grid>
                        </Border>

                        <Border x:Name="ContentPanel"                                    
                                    Grid.Column="0" 
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    Grid.Row="1" 
                                    KeyboardNavigation.TabIndex="2" 
                                    KeyboardNavigation.TabNavigation="Local" 
                                    BorderThickness="1,0,1,1">

                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  ContentSource="SelectedContent"
                                                  Margin="{TemplateBinding Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>

                        </Border>


                        <Border x:Name="itemValidationBorder"
                                Margin="0,-2,0,0"
                                Panel.ZIndex="2"
                                IsHitTestVisible="False"                                
                                Visibility="Collapsed"
                                BorderBrush="Transparent"
                                Grid.Column="{Binding (Grid.Column),ElementName=ContentPanel}"
                                Grid.Row="{Binding (Grid.Row),ElementName=ContentPanel}"
                                BorderThickness="{Binding BorderThickness,ElementName=ContentPanel}"
                                CornerRadius="0">
                        </Border>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter Property="HorizontalAlignment" TargetName="svTP" Value="Stretch"/>
                            <Setter Property="HorizontalAlignment" TargetName="TabPanelBorder" Value="Stretch"/>
                            <Setter Property="Grid.Row" TargetName="TabPanelBorder" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="*"/>

                            <Setter Property="Orientation" TargetName="HeaderPanel" Value="Horizontal"/>
                            <Setter Property="Visibility" TargetName="BottomLine" Value="Visible"/>
                            <Setter Property="BorderThickness" TargetName="ContentPanel" Value="1,0,1,1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="1"/>
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="HorizontalAlignment" TargetName="svTP" Value="Stretch"/>
                            <Setter Property="HorizontalAlignment" TargetName="TabPanelBorder" Value="Stretch"/>
                            <Setter Property="Grid.Row" TargetName="TabPanelBorder" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Orientation" TargetName="HeaderPanel" Value="Horizontal"/>
                            <Setter Property="Visibility" TargetName="TopLine" Value="Visible"/>
                            <Setter Property="BorderThickness" TargetName="ContentPanel" Value="1,1,1,0"/>
                            <Setter Property="Margin" TargetName="itemValidationBorder" Value="0,0,0,-2"/>
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="HorizontalAlignment" TargetName="svTP" Value="Left"/>
                            <Setter Property="HorizontalAlignment" TargetName="TabPanelBorder" Value="Left"/>
                            <Setter Property="VerticalAlignment" TargetName="TabPanelBorder" Value="Stretch"/>
                            <Setter Property="HorizontalScrollBarVisibility" TargetName="svTP" Value="Disabled"/>
                            <Setter Property="VerticalScrollBarVisibility" TargetName="svTP" Value="Hidden"/>
                            <Setter Property="Grid.Row" TargetName="TabPanelBorder" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="TabPanelBorder" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Visibility" TargetName="RightLine" Value="Visible"/>
                            <Setter Property="Orientation" TargetName="HeaderPanel" Value="Vertical"/>
                            <Setter Property="BorderThickness" TargetName="ContentPanel" Value="0,1,1,1"/>
                            <Setter Property="Margin" TargetName="itemValidationBorder" Value="0,0,-2,0"/>
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="HorizontalAlignment" TargetName="svTP" Value="Left"/>
                            <Setter Property="HorizontalAlignment" TargetName="TabPanelBorder" Value="Left"/>
                            <Setter Property="VerticalAlignment" TargetName="TabPanelBorder" Value="Stretch"/>

                            <Setter Property="HorizontalScrollBarVisibility" TargetName="svTP" Value="Disabled"/>
                            <Setter Property="VerticalScrollBarVisibility" TargetName="svTP" Value="Hidden"/>

                            <Setter Property="Grid.Row" TargetName="TabPanelBorder" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="TabPanelBorder" Value="1"/>

                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Orientation" TargetName="HeaderPanel" Value="Vertical"/>
                            <Setter Property="Visibility" TargetName="LeftLine" Value="Visible"/>
                            <Setter Property="BorderThickness" TargetName="ContentPanel" Value="1,1,0,1"/>
                            <Setter Property="Margin" TargetName="itemValidationBorder" Value="-2,0,0,0"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding SelectedContainer.(Validation.HasError),RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="itemValidationBorder"
                                    Value="{Binding SelectedItem.(Validation.Errors).CurrentItem,RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ValidationErrorToBorderBrushConverter}}" />
                            <Setter Property="Visibility"
                                    TargetName="itemValidationBorder"
                                    Value="Visible" />
                            <Setter Property="Stroke"
                                    TargetName="BottomLine"
                                    Value="{Binding SelectedItem.(Validation.Errors).CurrentItem,RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ValidationErrorToBorderBrushConverter}}" />
                            <Setter Property="StrokeDashArray"
                                    TargetName="BottomLine"
                                    Value="{x:Null}" />
                            <Setter Property="StrokeDashOffset"
                                    TargetName="BottomLine"
                                    Value="{x:Static System:Double.NaN}" />
                        </DataTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl:RrcTabItem}"
           BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="{StaticResource DefaultFontBrush}" />
        <Setter Property="Padding"
                Value="6,0,6,0" />
        <Setter Property="BorderBrush"
                Value="{StaticResource DefaultBorderBrush}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl:RrcTabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid>
                            <Border Name="Bd"
                                    BorderThickness="1,1,1,0"
                                    Background="{TemplateBinding Background}"
                                    Margin="2,0,0,2"/>
                            <Border Name="ValidationBorder"                                     
                                    BorderThickness="{Binding BorderThickness,ElementName=Bd}" 
                                    Margin="2,0,0,2"/>
                            <Border Padding="{TemplateBinding Padding}"
                                    Margin="{Binding Margin,ElementName=Bd}">
                                <ContentPresenter Name="Content"
                                                  Margin="0,5,0,5"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                  VerticalAlignment="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                  RecognizesAccessKey="True" />
                            </Border>
                        </Grid>
                        <Grid Name="highlightElem" Background="{TemplateBinding Highlight}" Opacity="0.3" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="Bd" Property="Margin" Value="0,2,0,0" />
                            <Setter TargetName="ValidationBorder" Property="Margin" Value="2,2,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="Bd" Property="Margin" Value="0,0,2,0" />
                            <Setter TargetName="ValidationBorder" Property="Margin" Value="0,2,2,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="Bd" Property="Margin" Value="2,0,0,0" />
                            <Setter TargetName="ValidationBorder" Property="Margin" Value="2,2,0,0" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemHotBackground}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}" />
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource DefaultBackgroundBrush}" />
                            <Setter Property="Background"
                                    Value="{StaticResource DefaultBackgroundBrush}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>



                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Margin" Value="2,0,0,1"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true" />
                                <Condition Property="TabStripPlacement"
                                           Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Margin" Value="0,1,0,-2"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true" />
                                <Condition Property="TabStripPlacement"
                                           Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Margin" Value="-2,0,1,0"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true" />
                                <Condition Property="TabStripPlacement"
                                           Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Margin" Value="1,0,-2,0"/>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource DefaultDisabledFontBrush}" />
                        </Trigger>

                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Background"
                                    TargetName="ValidationBorder"
                                    Value="{Binding (Validation.Errors).CurrentItem,RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ValidationErrorToBackgroundBrushConverter}}" />
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="True" />
                                <Condition Property="Validation.HasError"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="ValidationBorder"
                                    Value="{Binding (Validation.Errors).CurrentItem,RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ValidationErrorToBorderBrushConverter}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="False" />
                                <Condition Property="Validation.HasError"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity"
                                    TargetName="ValidationBorder"
                                    Value="0.5" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="False" />
                                <Condition Property="Validation.HasError" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    TargetName="ValidationBorder"
                                    Value="0,0,0,2" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="False" />
                                <Condition Property="Validation.HasError" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    TargetName="ValidationBorder"
                                    Value="0,0,2,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="False" />
                                <Condition Property="Validation.HasError" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    TargetName="ValidationBorder"
                                    Value="0,2,0,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="False" />
                                <Condition Property="Validation.HasError" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    TargetName="ValidationBorder"
                                    Value="2,0,0,0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>