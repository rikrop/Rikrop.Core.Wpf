<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:Rikrop.Core.Wpf.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Rikrop.Core.Wpf;component/Themes/Brushes.xaml" />
        <ResourceDictionary Source="/Rikrop.Core.Wpf;component/Themes/Styles/ValidationErrorTempalte.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               StrokeThickness="1"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1"
                               StrokeThickness="1"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="CheckedStateImage">
        <Viewbox>
            <Canvas Width="12.631"
                    Height="12.631">
                <Path StrokeThickness="1.0"
                      Stroke="#ff414041"
                      StrokeMiterLimit="1.0"
                      Data="F1 M 12.130,12.131 L 0.500,12.131 L 0.500,0.500 L 12.130,0.500 L 12.130,12.131 Z" />

                <Path Fill="#ff414041"
                      Data="F1 M 5.845,11.195 C 5.599,11.195 5.366,10.994 5.219,10.793 L 1.490,5.540 L 3.397,5.540 L 5.720,8.887 L 10.286,0.888 L 11.997,0.888 L 6.539,10.803 C 6.418,11.045 6.179,11.188 5.910,11.211 C 5.888,11.213 5.867,11.195 5.845,11.195 Z" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="UncheckedStateImage">
        <Viewbox>
            <Canvas Width="12.631"
                    Height="12.631">
                <Path StrokeThickness="1.0"
                      Stroke="#ff414041"
                      StrokeMiterLimit="1.0"
                      Data="F1 M 12.130,12.130 L 0.500,12.130 L 0.500,0.500 L 12.130,0.500 L 12.130,12.130 Z" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="UndefinedStateImage">
        <Viewbox>
            <Canvas Width="12.631"
                    Height="12.631">
                <Path StrokeThickness="1.0"
                      Stroke="#ff414041"
                      StrokeMiterLimit="1.0"
                      Data="F1 M 12.130,12.131 L 0.500,12.131 L 0.500,0.500 L 12.130,0.500 L 12.130,12.131 Z" />

                <Path Fill="#ff414041"
                      Data="F1 M 10.099,10.100 L 2.531,10.100 L 2.531,2.531 L 10.099,2.531 L 10.099,10.100 Z" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <Style TargetType="{x:Type Controls:RrcCheckBox}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{StaticResource RrcValidationErrorTemplate}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource EmptyCheckBoxFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:RrcCheckBox}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkImageBorder"
                                    Grid.Column="0">
                                <ContentPresenter x:Name="checkImage"
                                                  ContentTemplate="{StaticResource CheckedStateImage}"
                                                  Margin="{TemplateBinding CheckImageMargin}" />
                            </Border>
                            <Rectangle Grid.Column="0"
                                       x:Name="overlay"
                                       Fill="White"
                                       Opacity="0.4" 
                                       Visibility="Collapsed"/>
                            <ContentPresenter Grid.Column="1"
                                              x:Name="content"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              ContentSource="Content" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="True">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource CheckRadioFocusVisual}" />
                            <Setter Property="Padding"
                                    Value="2,0" />
                            <Setter TargetName="checkImageBorder"
                                    Property="Width"
                                    Value="{Binding ActualHeight, ElementName=content}" />
                        </Trigger>
                        <Trigger Property="HasContent"
                                 Value="False">
                            <Setter TargetName="checkImage"
                                    Property="Margin"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter TargetName="overlay"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="checkImage"
                                    Property="ContentTemplate"
                                    Value="{StaticResource UncheckedStateImage}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter TargetName="checkImage"
                                    Property="ContentTemplate"
                                    Value="{StaticResource UndefinedStateImage}" />
                        </Trigger>
                        <Trigger Property="IsHorizontalReversed"
                                 Value="True">
                            <Setter TargetName="checkImageBorder"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="overlay"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="content"
                                    Property="Grid.Column"
                                    Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>