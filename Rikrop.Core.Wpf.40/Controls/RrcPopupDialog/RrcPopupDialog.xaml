<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:RrcPopupDialog="clr-namespace:Rikrop.Core.Wpf.Controls.RrcPopupDialog"
                    mc:Ignorable="d">

    <Style x:Key="WindowCloseButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="47" />
        <Setter Property="Height"
                Value="20" />
        <Setter Property="Background"
                Value="#FF3636" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="ToolTip"
                Value="Закрыть" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Background"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True">
                        <Border Name="Highlighter"
                                Background="#64FFFFFF">
                            <Image Source="/Rikrop.Core.Wpf;component/Icons/WindowClose.png"
                                   Width="11"
                                   Height="10" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsEnabled"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Highlighter"
                                    Property="Background"
                                    Value="#32FFFFFF" />
                        </MultiTrigger>

                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Highlighter"
                                    Property="Background"
                                    Value="#34000000" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Background"
                                    Property="BorderBrush"
                                    Value="DarkGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RrcPopupDialog:RrcPopupDialog}">
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="PopupContentCornerRadius"
                Value="0" />
        <Setter Property="PopupContentBorderThickness"
                Value="3" />
        <Setter Property="PopupContentPadding"
                Value="6" />
        <Setter Property="PopupContentBackground"
                Value="White" />
        <Setter Property="PopupContentBorderBrush"
                Value="Gray" />
        <Setter Property="PopupContentMargin"
                Value="40" />
        <Setter Property="KeyboardNavigation.IsTabStop"
                Value="False" />
        <Setter Property="HeaderHorizontalAlignment"
                Value="Center" />
        <Setter Property="HeaderVerticalAlignment"
                Value="Center" />
        <Setter Property="HeaderBackground"
                Value="Gray" />
        <Setter Property="HeaderContentMargin"
                Value="4" />
        <Setter Property="HeaderBorderStyle">
            <Setter.Value>
                <Style TargetType="Border">
                    <Setter Property="Height"
                            Value="27" />
                    <Setter Property="TextBlock.FontSize"
                            Value="15" />
                    <Setter Property="Margin"
                            Value="0,-2,0,0" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="OverlayRectangleStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill"
                            Value="#7EFFFFFF" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ClosePopupButtonStyle">
            <Setter.Value>
                <Style TargetType="Button"
                       BasedOn="{StaticResource WindowCloseButtonStyle}">
                    <Setter Property="HorizontalAlignment"
                            Value="Right" />
                    <Setter Property="VerticalAlignment"
                            Value="Top" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RrcPopupDialog:RrcPopupDialog}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.Resources>
                            <RrcPopupDialog:NegativeDoubleConverter x:Key="NegativeDoubleConverter" />

                            <Storyboard x:Key="SlideDownStoryboard">
                                <DoubleAnimation
                                    From="{Binding ActualHeight, ElementName=PART_PopupConentBorder, Converter={StaticResource NegativeDoubleConverter}}"
                                    To="0"
                                    Duration="{Binding PopupAnimationDuration, RelativeSource={RelativeSource TemplatedParent}}"
                                    Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                    Storyboard.TargetName="PART_PopupConentBorder">
                                </DoubleAnimation>
                                <DoubleAnimation From="0"
                                                 To="1"
                                                 Duration="{Binding PopupAnimationDuration, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Storyboard.TargetName="PART_OverlayRectangle"
                                                 Storyboard.TargetProperty="(UIElement.Opacity)" />
                            </Storyboard>

                            <Storyboard x:Key="FadeStoryboard">
                                <DoubleAnimation From="0"
                                                 To="1"
                                                 Duration="{Binding PopupAnimationDuration, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Storyboard.TargetName="PART_PopupConentBorder"
                                                 Storyboard.TargetProperty="(UIElement.Opacity)" />
                                <DoubleAnimation From="0"
                                                 To="1"
                                                 Duration="{Binding PopupAnimationDuration, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Storyboard.TargetName="PART_OverlayRectangle"
                                                 Storyboard.TargetProperty="(UIElement.Opacity)" />
                            </Storyboard>

                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetName="PART_PopupConentBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetName="PART_OverlayRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetName="PART_PopupConentBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetName="PART_OverlayRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SlideDown"
                                             Storyboard="{StaticResource SlideDownStoryboard}" />

                                <VisualState x:Name="Fade"
                                             Storyboard="{StaticResource FadeStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="content"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        KeyboardNavigation.IsTabStop="False" />
                        <Rectangle x:Name="PART_OverlayRectangle"
                                   Style="{TemplateBinding OverlayRectangleStyle}" />

                        <Border x:Name="PART_PopupConentBorder"
                                Margin="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentMargin), ElementName=popupContent, Mode=OneWay}"
                                HorizontalAlignment="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentHorizontalAlignment), ElementName=popupContent, Mode=OneWay}"
                                VerticalAlignment="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentVerticalAlignment), ElementName=popupContent, Mode=OneWay}"
                                MaxWidth="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentMaxWidth), ElementName=popupContent, Mode=OneWay}"
                                MaxHeight="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentMaxHeight), ElementName=popupContent, Mode=OneWay}"
                                Background="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentBackground), ElementName=popupContent, Mode=OneWay}"
                                BorderThickness="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentBorderThickness), ElementName=popupContent, Mode=OneWay}"
                                BorderBrush="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentBorderBrush), ElementName=popupContent, Mode=OneWay}"
                                CornerRadius="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentCornerRadius), ElementName=popupContent, Mode=OneWay}"
                                Padding="0"
                                KeyboardNavigation.IsTabStop="False">
                            <Border.RenderTransform>
                                <TranslateTransform />
                            </Border.RenderTransform>

                            <Grid>
                                <Border Effect="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupBorderEffect), ElementName=popupContent, Mode=OneWay}"
                                        Background="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentBackground), ElementName=popupContent, Mode=OneWay}"
                                        BorderBrush="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentBorderBrush), ElementName=popupContent, Mode=OneWay}"
                                        CornerRadius="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentCornerRadius), ElementName=popupContent, Mode=OneWay}"/>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="0"
                                            Style="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.HeaderBorderStyle), ElementName=popupContent, Mode=OneWay}"
                                            Background="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.HeaderBackground), ElementName=popupContent, Mode=OneWay}"
                                            Visibility="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.HeaderVisibility), ElementName=popupContent, Mode=OneWay}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Grid.Column="0"
                                                              Content="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.Header), ElementName=popupContent, Mode=OneWay}"
                                                              ContentTemplate="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.HeaderTemplate), ElementName=popupContent, Mode=OneWay}"
                                                              ContentTemplateSelector="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.HeaderTemplateSelector), ElementName=popupContent, Mode=OneWay}"
                                                              HorizontalAlignment="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.HeaderHorizontalAlignment), ElementName=popupContent, Mode=OneWay}"
                                                              VerticalAlignment="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.HeaderVerticalAlignment), ElementName=popupContent, Mode=OneWay}"
                                                              Margin="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.HeaderContentMargin), ElementName=popupContent, Mode=OneWay}" />

                                            <Button x:Name="PART_CloseButton"
                                                    Grid.Column="1"
                                                    Style="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.ClosePopupButtonStyle), ElementName=popupContent, Mode=OneWay}"
                                                    Visibility="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.ClosePopupButtonVisibility), ElementName=popupContent, Mode=OneWay}"
                                                    Command="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.ClosePopupCommand), ElementName=popupContent, Mode=OneWay}"
                                                    CommandParameter="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.ClosePopupCommandParameter), ElementName=popupContent, Mode=OneWay}" />
                                        </Grid>
                                    </Border>
                                    <ContentPresenter x:Name="popupContent"
                                                      Grid.Row="1"
                                                      Content="{TemplateBinding PopupContent}"
                                                      Margin="{Binding Path=Content.(RrcPopupDialog:RrcPopupDialog.PopupContentPadding), ElementName=popupContent, Mode=OneWay}"
                                                      KeyboardNavigation.IsTabStop="False"
                                                      KeyboardNavigation.TabNavigation="Cycle"
                                                      KeyboardNavigation.ControlTabNavigation="Cycle"
                                                      KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>